class GrafoMatriz{
	Vertice v = new Vertice();
	int numVertices;
	static int maxVertices = 20;
	Vertice [] vertices;
	int [][]matrizAd;
	
	public GrafoMatriz() {}
	public GrafoMatriz(int mx) {
		matrizAd = new int [mx][mx];
		vertices = new Vertice[mx];
		for(int i=0; i<mx ;i++) {
			for(int j=0; i<mx; i++) {
				matrizAd[i][j] = 0;
			}
		}
		numVertices = 0;
	}
	
	public void nuevoVertice (String nom) {
		boolean esta = numVertice(nom) >=0;
		if(!esta) {
			Vertice v = new Vertice(nom);
			v.asignarVertice(numVertices);
			vertices[numVertices++] = v;
		}
	}
	public int numVertice(String vs) {
		boolean encontrado = false;
		int i=0;
		for(; (i<numVertices)&& !encontrado;) {
			encontrado = vertices[i].equals(v);
			if(!encontrado) i++;
		}
		return (i< numVertices) ? i : -1;
	}

	
	public void nuevoArco(String a, String b)throws Exception{
		int va, vb;
		va = numVertice(a);
		vb = numVertice(b);
		if(va <0 || vb <0)throw new Exception ("Vertice no Existe");
		matrizAd [va][vb] = 1;
	}
	public boolean adyacente(String a, String b)throws Exception{
		GrafoMatriz gm = new GrafoMatriz();
		int va, vb;
		va = numVertice(a);
		vb = numVertice(b);
		if (va < 0 || vb < 0) throw new Exception ("Vértice no existe");
		return gm.matrizAd[va][vb] == 1;
		}
	public boolean adyacente(int va, int vb)throws Exception{
		GrafoMatriz gm = new GrafoMatriz();
		if (va < 0 || vb < 0) throw new Exception ("Vértice no existe");
		return gm.matrizAd[va][vb] == 1;
	}
}